name: Verify Signatures with Gitsign

on:
  push:
    branches:
      - main

env:
  IMAGE_REGISTRY: quay.io
  IMAGE_REPO: lucarval/festoji
  IMAGE_TAGS: latest
  APPS_DOMAIN: apps.rosa.fy2yb-7egqy-3e5.w9d2.p3.openshiftapps.com
  TUF_URL: https://tuf-openshift-operators.$APPS_DOMAIN
  OIDC_ISSUER_URL: https://token.actions.githubusercontent.com
  COSIGN_FULCIO_URL: https://fulcio-server-openshift-operators.$APPS_DOMAIN
  COSIGN_REKOR_URL: https://rekor-server-openshift-operators.$APPS_DOMAIN
  COSIGN_MIRROR: https://tuf-openshift-operators.$APPS_DOMAIN
  COSIGN_ROOT: https://tuf-openshift-operators.$APPS_DOMAIN/root.json
  COSIGN_OIDC_ISSUER: https://token.actions.githubusercontent.com
  COSIGN_CERTIFICATE_OIDC_ISSUER: https://token.actions.githubusercontent.com
  REKOR_REKOR_SERVER: https://rekor-server-openshift-operators.$APPS_DOMAIN
  GITSIGN_OIDC_ISSUER: https://keycloak-keycloak-system.$APPS_DOMAIN/auth/realms/trusted-artifact-signer
  TAS_IMAGE: quay.io/kahboom/test-image:latest
  COSIGN_YES: "true"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # required to request the OIDC token
      contents: read   # required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Build project
        run: |
          rm -rf dist & mkdir -p dist
          echo "Example artifact" > dist/artifact.txt

      - name: Install Gitsign
        shell: bash
        run: |
          set -ex
          curl -fsL https://cli-server-trusted-artifact-signer.$APPS_DOMAIN/clients/linux/gitsign-amd64.gz -o 
          /usr/local/bin/gitsign-amd64.gz
          gunzip /usr/local/bin/gitsign-amd64.gz
          chmod +x /usr/local/bin/gitsign-amd64
          mv /usr/local/bin/gitsign-amd64 /usr/local/bin/gitsign

      - name: Verify Gitsign Installation
        run: |
          which gitsign
          ls -l /usr/local/bin/gitsign
          gitsign version
        shell: bash

      - name: Setup signing
        shell: bash
        run: |
          git config --global commit.gpgsign true
          git config --global gpg.x509.program gitsign
          git config --global gpg.format x509

      - name: Verify Commit Signatures
        run: |
          gitsign verify --certificate-identity=${{ secrets.IDENTITY_EMAIL }} --certificate-oidc-issuer=${{ secrets.GITSIGN_OIDC_ISSUER }} HEAD
        shell: bash

      - name: Request OIDC token
        id: oidc-token
        run: |
          echo "Requesting OIDC token..."
          echo "Token: ${{ steps.auth.outputs.id_token }}"
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }}
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}

      - name: Use OIDC token with Sigstore
        run: |
          cosign login ${{ secrets.CI_REGISTRY }} -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }}
          cosign initialize --mirror=$TUF_URL --root=$TUF_URL/root.json
          cosign sign --oidc-issuer ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }} --identity-token ${{ steps.oidc-token.outputs.id_token }} $TAS_IMAGE
          cosign verify --certificate-oidc-issuer='https://token.actions.githubusercontent.com' 
          --certificate-identity-regexp='https://github.com/kahboom' $TAS_IMAGE


